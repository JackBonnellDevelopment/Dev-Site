<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Face Tracking on Jack Bonnell - C++ Programmer</title><link>https://jackbonnell.dev/tags/face-tracking/</link><description>Recent content in Face Tracking on Jack Bonnell - C++ Programmer</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Fri, 15 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://jackbonnell.dev/tags/face-tracking/index.xml" rel="self" type="application/rss+xml"/><item><title>Life: Dynamic Path Planning, Face Detection using Vitis-AI</title><link>https://jackbonnell.dev/blog/life-dynamic-path-planning-face-detection-using-vitis-ai/</link><pubDate>Fri, 15 Oct 2021 00:00:00 +0000</pubDate><guid>https://jackbonnell.dev/blog/life-dynamic-path-planning-face-detection-using-vitis-ai/</guid><description>Life: Dynamic Path Planning, Face Detection using Vitis-AI While creating a new tutorial around face tracking on the KV260, I have been working out how to implement a dynamic path planning structure from scratch this week.
Dynamic Path Planning Working on autonomous movement sometimes is not as linear as it seems. When working with Ackerman Steering, you have to factor in that you need smooth flowing movements to counteract jittering with a more common tank-based steering model.</description></item></channel></rss>