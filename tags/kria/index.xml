<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kria on Jack Bonnell - C++ Programmer</title><link>https://jackbonnelldevelopment.github.io/tags/kria/</link><description>Recent content in Kria on Jack Bonnell - C++ Programmer</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Fri, 19 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://jackbonnelldevelopment.github.io/tags/kria/index.xml" rel="self" type="application/rss+xml"/><item><title>Adaptive Computing Challenge: Week 1</title><link>https://jackbonnelldevelopment.github.io/blog/adaptive-computing-challenge-week-1/</link><pubDate>Fri, 19 Nov 2021 00:00:00 +0000</pubDate><guid>https://jackbonnelldevelopment.github.io/blog/adaptive-computing-challenge-week-1/</guid><description>Adaptive Computing Challenge: Week 1 I am happy to announce that I have been chosen to receive free hardware for the Adaptive Computing Challenge for my project working on &amp;ldquo;Cattle Detection on the edge&amp;rdquo;.
Utilising Depth Perception ON Semi IAS Camera Module One of the main progressions I have made with this year&amp;rsquo;s challenge is to find the best way to utilise depth perception on the KV260. The current accessory pack only supplies one IAS camera module, meaning that I would have to purchase a second Camera priced at approximately Â£150.</description></item><item><title>Getting Ready for the Adaptive Computing Challenge</title><link>https://jackbonnelldevelopment.github.io/blog/getting-ready-for-the-adaptive-computing-challenge/</link><pubDate>Fri, 12 Nov 2021 00:00:00 +0000</pubDate><guid>https://jackbonnelldevelopment.github.io/blog/getting-ready-for-the-adaptive-computing-challenge/</guid><description>Getting Ready for the Adaptive Computing Challenge On the 15th of November, the Adaptive Computing Challenge will be announcing who gets allocated hardware to develop their competition idea.
Cattle Detection on the Edge This year I wanted to take a look at the emerging market for technology in the agricultural friend. More specifically, I want to look at cows and identify and document cows on mass. Currently, it is very labour intensive to raise cattle.</description></item><item><title>Life: PIDs and Trading Bot Plans</title><link>https://jackbonnelldevelopment.github.io/blog/life-pids-and-trading-bot-plans/</link><pubDate>Fri, 29 Oct 2021 00:00:00 +0000</pubDate><guid>https://jackbonnelldevelopment.github.io/blog/life-pids-and-trading-bot-plans/</guid><description>Life: PIDs and Trading Bot Plans This week I have been working on PID controllers and started my side project of trying to get my head around implementing an effective trading bot to manage my portfolio.
Proportional-Integral-Derivative Controller (PID controller) PID Controllers regulate the output of a particular parameter. In the automotive industry, PIDs are used for autonomous driving, such as cruise control. In basic terms, the user does not feel hard acceleration or braking from their car because the PID creates a gradual response rather than an immediate one.</description></item><item><title>Life: Dynamic Path Planning, Face Detection using Vitis-AI</title><link>https://jackbonnelldevelopment.github.io/blog/life-dynamic-path-planning-face-detection-using-vitis-ai/</link><pubDate>Fri, 15 Oct 2021 00:00:00 +0000</pubDate><guid>https://jackbonnelldevelopment.github.io/blog/life-dynamic-path-planning-face-detection-using-vitis-ai/</guid><description>Life: Dynamic Path Planning, Face Detection using Vitis-AI While creating a new tutorial around face tracking on the KV260, I have been working out how to implement a dynamic path planning structure from scratch this week.
Dynamic Path Planning Working on autonomous movement sometimes is not as linear as it seems. When working with Ackerman Steering, you have to factor in that you need smooth flowing movements to counteract jittering with a more common tank-based steering model.</description></item><item><title>Life: Device Tree Overlays, JTag Development Flows and Validation Testing</title><link>https://jackbonnelldevelopment.github.io/blog/life-device-tree-overlays-jtag-development-flows-and-validation-testing/</link><pubDate>Thu, 07 Oct 2021 00:00:00 +0000</pubDate><guid>https://jackbonnelldevelopment.github.io/blog/life-device-tree-overlays-jtag-development-flows-and-validation-testing/</guid><description>Life: Device Tree Overlays, JTag Development Flows and Validation Testing This week, I&amp;rsquo;ve been working on creating a more efficient Workflow for myself regarding mocking up block designs and Vitis applications utilising the Lynsyn Lite, along with trying to brush up on my validation testing in Vivado.
Device Tree Overlays With my current workflow structure, I do not come across Device tree overlays very often as usually, the PetaLinux build is bespoke to the task at hand.</description></item><item><title>Life: FPGA Work, Huel, Future Thoughts</title><link>https://jackbonnelldevelopment.github.io/blog/life-fpga-work-huel-future-thoughts/</link><pubDate>Fri, 24 Sep 2021 00:00:00 +0000</pubDate><guid>https://jackbonnelldevelopment.github.io/blog/life-fpga-work-huel-future-thoughts/</guid><description>Life: FPGA Work, Huel, Future Thoughts This post is just a little weekly round-up of what I have been up to, thoughts and processes I have been working on, and any good and bad life choices.
FPGA Work This week has been constant. With the release of the Kria board, the race is on to start adapting current processes to work. My current job supports Intel RealSense for computer vision work, so the need for this to be available on the Kria board is paramount.</description></item><item><title>Kria: Initial Thoughts</title><link>https://jackbonnelldevelopment.github.io/blog/kria-intial-thoughts/</link><pubDate>Fri, 17 Sep 2021 00:00:00 +0000</pubDate><guid>https://jackbonnelldevelopment.github.io/blog/kria-intial-thoughts/</guid><description>Kria: Initial Thoughts Kria Recently released the Kria KV260 Vision AI Starter Kit, a SOM with the added benefit of a FPGA. Different in the fact that you should technically be able to add a 12v power supply and run AI models to your heart&amp;rsquo;s content.
Inital Thoughts I like the Design of the Kria carrier board it has plenty of IO available. up to 32 concurrent streams are possible through a number of IAS and CSI camera connections.</description></item></channel></rss>